spect<-read_csv("data/minolta_data.csv")
library(tidyverse)
spect<-read_csv("data/minolta_data.csv")
spect
nrow(spect)
spect %>% nrow()
#1. subset all rows with "white"
white_bg<-subset(spect, background=="white")
#2. count rows
nrow(white_bg)
dat<-read_csv("data/minolta_data.csv")
dat
dat %>%
subset(background=="white") %>%
nrow()
dat %>%
filter(background=="white") %>% # specify rows to keep
select(background, specimen_id, dorso_ventral) %>% # specify coloumns to keep
arrange(dorso_ventral) # specify row order based on column values
# in base R, you would create a new variable/column like so:
dat$specimen_bg<-paste(dat$specimen_id, dat$background)
dat
dat[,c("specimen_id","background","specimen_bg")]
# in base R, you would create a new variable/column like so:
dat$specimen_bg<-paste(dat$specimen_id, dat$background, sep="_")
dat[,c("specimen_id","background","specimen_bg")]
# lets calculate an average fuel consumption for city and highway driving
dat %>%
mutate(specimen_bg=paste(specimen_id, background, sep="_"))
# lets calculate an average fuel consumption for city and highway driving
dat %>%
mutate(specimen_bg=paste(specimen_id, background, sep="_")) %>%
select(specimen_id, background, specimen_bg) # print only these 3 columbs
# mean manufacturing year:
dat %>%
summarise(mean=mean(`360nm`))
# get the means of all numeric variables
dat %>%
summarise_if(is.numeric, mean)
dat %>%
summarise(mean_reflectance=mean(`360nm`),
sd_reflectance=sd(`360nm`))
# look what happens when we group by manufacturer:
dat %>%
group_by(background, dorso_ventral)
dat %>%
group_by(background, dorso_ventral)
summarise_if(is.numeric, .funs = c(mean=mean, sd=sd))
# and now, we can get summary statistics per group:
dat %>%
group_by(background, dorso_ventral) %>%
summarise_if(is.numeric, .funs = c(mean=mean, sd=sd))
View(dat)
dat %>% select(specimen_id, background) %>%
distinct_all()
dat_spect<-read_csv("data/minolta_data.csv")
dat
dat_spect
nrow(dat_spect)
dat_spect %>% nrow()
#1. subset all rows with "white"
d<-subset(x=dat_spect, dorsal_ventral=="d")
#1. subset all rows with "white"
d<-subset(x=dat_spect, dorso_ventral=="d")
#2. count rows
nrow(x=d)
#1. subset all rows with "white"
d<-subset(x=dat_spect, dorso_ventral=="D")
#2. count rows
nrow(x=d)
nrow(x=subset(x=dat_spect, dorso_ventral=="D"))
dat_spect %>%
subset(dorso_ventral=="D") %>%
nrow()
dat_spect %>%
filter(dorso_ventral=="D")
dat_spect %>%
filter(dorso_ventral=="D") %>% # specify rows to keep
select(-dorso_ventral)
dat_spect %>%
filter(dorso_ventral=="D") %>% # specify rows to keep
select(-dorso_ventral) %>% # specify columns to keep (or with a minus, which ones to drop)
arrange(dorso_ventral)
dat_spect %>%
filter(dorso_ventral=="D") %>% # specify rows to keep
select(-dorso_ventral) %>% # specify columns to keep (or with a minus, which ones to drop)
arrange(specimen_id)
dat$spec_side<-paste(dat$specimen_id, dat$dorso_ventral, sep="_")
dat_spect$spec_side<-paste(dat_spect$specimen_id, dat_spect$dorso_ventral, sep="_")
dat[,c("specimen_id","dorso_ventral","spec_side")]
dat_spect$id_side<-paste(dat_spect$specimen_id, dat_spect$dorso_ventral, sep="_")
dat_spect[,c("specimen_id","dorso_ventral","id_side")]
# lets calculate an average fuel consumption for city and highway driving
dat_spect %>%
mutate(id_side=paste(specimen_id, dorso_ventral, sep="_")) %>%
select(specimen_id, dorso_ventral, id_side) # print only selected columns
dat_spect<-read_csv("data/minolta_data.csv")
dat_spect
nrow(dat_spect)
dat_spect %>% nrow()
# split a string into pieces
str_split(string=dat_spect$id, pattern="_")
# split a string into pieces
str_split(string=dat_spect$id, pattern="_", simplify = T)
# split a string into pieces
str_split(string=dat_spect$sample, pattern="_", simplify = T)
# split a string into pieces
str_split(string=dat_spect$sample, pattern="_")
# split a string into pieces
str_split(string=dat_spect$sample, pattern="_", simply=T)
# split a string into pieces
str_split_1(string=dat_spect$sample, pattern="_")
#
dat_spect %>%
separate(col=sample, into=c("specimen","position"), sep="_")
dat_spect %>%
muate(postion=str_extract(string=sample, pattern="\w"))
dat_spect %>%
muate(postion=str_extract(string=sample, pattern="\\w"))
dat_spect %>%
mutate(postion=str_extract(string=sample, pattern="\\w"))
dat_spect
dat_spect %>%
filter(contains(sample, "D"))
dat_spect %>%
filter(id>20))
dat_spect %>%
filter(id>20)
dat_spect %>%
filter(id>20) %>% # specify rows to keep
select(-sample) %>% # specify columns to keep (or with a minus, which ones to drop)
arrange(`360nm`) # specify row order based on column values
dat_spect %>%
mutate(postion=str_extract(string=sample, pattern="\\w"))
dat_spect %>%
mutate(postion=str_extract(string=sample, pattern="\\w")) %>%
select(position, everything())
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="\\w")) # mutate to create a new variable/column, \\w to find only letters
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="\\w")) %>%
select(position, everything())
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[A-z]")) %>%
select(position, everything())
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[[A-z]]")) %>%
select(position, everything())
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[A-Z]")) %>%
select(position, everything())
# it looks like we have created the column, but it's at the very end. lets move around the columns
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[A-Z]")) %>%
select(position, everything())
# it looks like we have created the column, but it's at the very end. lets move around the columns
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[A-Z]")) %>%
select(position, -id, everything())
# it looks like we have created the column, but it's at the very end. lets move around the columns
dat_spect %>%
mutate(position=str_extract(string=sample, pattern="[A-Z]")) %>%
select(position, -id, everything())
dat_clean<-dat_spect %>%
separate(col=sample, into=c("specimen","position"), sep="_") %>%
select(-id)
dat_clean
dat_clean %>%
group_by(specimen, position) %>%
summarise(mean=mean(`360nm`))
dat_clean %>%
group_by(specimen, position) %>%
summarise(mean=mean(`360nm`))
dat_clean %>%
group_by(specimen, position) %>% # group by one or more columns
summarise(mean=mean(`360nm`),
sd=sd(`360nm`))
dat_clean %>%
group_by(specimen, position) %>%
summarise_all(mean)
dat_mean<-dat_clean %>%
group_by(specimen, position) %>%
summarise_all(mean)  %>%
ungroup()
dat_mean
knitr::opts_chunk$set(echo = TRUE,
eval = FALSE,
message=FALSE,
error=FALSE)
knitr::opts_knit$set(root.dir = '../')
library(webexercises)
install.packages("tidyverse",repos ="https://cran.rstudio.com/")
library(tidyverse)
install.packages("tidyverse", repos = "https://cran.rstudio.com/")
dat_spect<-read_csv("../data/minolta_data.csv")
knitr::opts_chunk$set(echo = TRUE,
eval = FALSE,
message=FALSE,
error=FALSE)
knitr::opts_knit$set(root.dir = '/')
library(webexercises)
dat_spect<-read_csv("../data/minolta_data.csv")
